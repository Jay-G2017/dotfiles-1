[[plugins]]
repo = 'neomake/neomake'
on_cmd = 'Neomake'
hook_source = '''
  let g:neomake_javascript_jshint_maker = {
      \ 'args': ['--verbose'],
      \ 'errorformat': '%A%f: line %l\, col %v\, %m \(%t%*\d\)',
      \ }
  let g:neomake_javascript_enabled_makers = ['jshint']
'''
[[plugins]]
repo = 'Shougo/neomru.vim'
on_i = 1

[[plugins]]
repo = 'Shougo/unite.vim'
depends = 'neomru.vim'
hook_source = 'source ~/.vim/config/plugins/unite.rc.vim'
hook_add = '''
  nnoremap <silent><C-p> :<C-u>Unite -buffer-name=files file_rec/async:!<CR>
  nnoremap <silent><leader>b :<C-u>Unite -no-split -buffer-name=buffer -quick-match buffer<CR>
  nnoremap <silent>K :Unite -auto-preview -no-split grep:.::<C-R><C-w><CR>
  nnoremap <silent><leader>g :Unite -auto-preview -no-split grep:.::<CR>
'''


[[plugins]]
repo = 'Shougo/echodoc.vim'
on_event = 'CompleteDone'
hook_source = 'call echodoc#enable()'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
if = "has('nvim')"
on_i = 1
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  source ~/.vim/config/plugins/deoplete.rc.vim
'''

[[plugins]]
repo = 'carlitux/deoplete-ternjs'
if = "has('nvim')"
on_i = 1
on_ft = 'javascript'
depends = 'deoplete.nvim'
build = 'npm install -g tern'
hook_source = '''
  let g:tern_request_timeout = 1
  let g:tern_show_signature_in_pum = 0
'''

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
if = "has('vim')"
hook_source = '''
  let g:ctrlp_map = '<C-p>'
  let g:ctrlp_working_path_mode = 'ra'
  let g:ctrlp_root_markers = ['.git','Gemfile','.vimrc','.bashrc', '.zshrc']
  let g:ctrlp_custom_ignore = {
       \'dir':  '\v[\/](\.(git|hg|svn)|node_modules|bower_components)$',
       \'file': '\v\.(exe|so|dll)$',
       \ }
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
on_map = {n = '<Plug>'}
hook_add = 'nmap <silent> <Leader>r <Plug>(quickrun)'

[[plugins]]
repo = 'easymotion/vim-easymotion'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap w <Plug>(easymotion-lineforward)
  nnoremap W     w
  nmap b <Plug>(easymotion-linebackward)
  nnoremap B     b
  nmap [Alt]j <Plug>(easymotion-j)
  nmap [Alt]k <Plug>(easymotion-k)
  nmap ' <Plug>(easymotion-prefix)

  let g:EasyMotion_startofline = 0
  let g:EasyMotion_show_prompt = 0
  let g:EasyMotion_verbose = 0
'''
